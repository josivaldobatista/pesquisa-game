{"ast":null,"code":"var _jsxFileName = \"/Users/valdo/Dev/workspace/java-spring/pesquisa-game/frontend-web/src/pages/records/index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './styles.css';\nimport { formatDate } from './helpers';\nimport Pagination from './pagination';\nconst BASE_URL = 'http://localhost:8080';\n\nconst Records = () => {\n  const [recordsResponse, setRecordsResponse] = useState();\n  const [activePage, setActivePage] = useState(0);\n  console.log(recordsResponse);\n  useEffect(() => {\n    axios.get(`${BASE_URL}/records?linesPerPage=12&page=${activePage}`).then(response => setRecordsResponse(response.data));\n  }, [activePage]);\n\n  const handlePageChange = index => {\n    setActivePage(index);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"records-table\",\n    cellPadding: \"0\",\n    cellSpacing: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, \"INSTANTE\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, \"NOME\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, \"IDADE\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, \"PLATAFORMA\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, \"G\\xCANERO\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, \"T\\xCDTULO DO GAME\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, recordsResponse === null || recordsResponse === void 0 ? void 0 : recordsResponse.content.map(record => /*#__PURE__*/React.createElement(\"tr\", {\n    key: record.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, formatDate(record.moment)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, record.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, record.age), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, record.gamePlatform), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, record.genreName), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, record.gameTitle))))), /*#__PURE__*/React.createElement(Pagination, {\n    activePage: activePage,\n    goToPage: handlePageChange,\n    totalPages: recordsResponse === null || recordsResponse === void 0 ? void 0 : recordsResponse.totalPages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Records;","map":{"version":3,"sources":["/Users/valdo/Dev/workspace/java-spring/pesquisa-game/frontend-web/src/pages/records/index.tsx"],"names":["React","useEffect","useState","axios","formatDate","Pagination","BASE_URL","Records","recordsResponse","setRecordsResponse","activePage","setActivePage","console","log","get","then","response","data","handlePageChange","index","content","map","record","id","moment","name","age","gamePlatform","genreName","gameTitle","totalPages"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nimport './styles.css'\nimport { RecordsResponse } from './types'\nimport { formatDate } from './helpers'\nimport Pagination from './pagination'\n\nconst BASE_URL = 'http://localhost:8080'\n\nconst Records = () => {\n    const [recordsResponse, setRecordsResponse] = useState<RecordsResponse>();\n    const [activePage, setActivePage] = useState(0);\n\n    console.log(recordsResponse)\n    useEffect(() => {\n        axios.get(`${BASE_URL}/records?linesPerPage=12&page=${activePage}`)\n            .then(response => setRecordsResponse(response.data))\n    }, [activePage]);\n\n    const handlePageChange = (index: number) => {\n        setActivePage(index)\n    }\n\n    return (\n        <div className=\"page-container\">\n            \n            <table className=\"records-table\" cellPadding=\"0\" cellSpacing=\"0\">\n                <thead>\n                    <tr>\n                        <th>INSTANTE</th>\n                        <th>NOME</th>\n                        <th>IDADE</th>\n                        <th>PLATAFORMA</th>\n                        <th>GÊNERO</th>\n                        <th>TÍTULO DO GAME</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {recordsResponse?.content.map(record => (\n                        <tr key={record.id}>\n                            <td>{formatDate(record.moment)}</td>\n                            <td>{record.name}</td>\n                            <td>{record.age}</td>\n                            <td className=\"text-secondary\">{record.gamePlatform}</td>\n                            <td>{record.genreName}</td>\n                            <td className=\"text-primary\">{record.gameTitle}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <Pagination\n                activePage={activePage}\n                goToPage={handlePageChange}\n                totalPages={recordsResponse?.totalPages}/>\n        </div>\n    );\n}\n\nexport default Records;"]},"metadata":{},"sourceType":"module"}